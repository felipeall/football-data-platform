from dataclasses import dataclass

from sqlalchemy import REAL, Column, Integer, String, UniqueConstraint

from app.models.base import Base, BaseMixin, IDMixin


@dataclass
class SofascoreMatchesEvents(Base, IDMixin, BaseMixin):
    __tablename__ = "matches_events"
    __table_args__ = (
        UniqueConstraint("match_id", "player_id"),
        {"schema": "sofascore"},
    )

    match_id: str = Column(String, nullable=False)
    player_id: str = Column(String, nullable=False)
    player_name: str = Column(String, nullable=False)
    accurate_cross: int = Column(Integer)
    accurate_keeper_sweeper: int = Column(Integer)
    accurate_long_balls: int = Column(Integer)
    accurate_pass: int = Column(Integer)
    aerial_lost: int = Column(Integer)
    aerial_won: int = Column(Integer)
    big_chance_created: int = Column(Integer)
    big_chance_missed: int = Column(Integer)
    blocked_scoring_attempt: int = Column(Integer)
    challenge_lost: int = Column(Integer)
    clearance_off_line: int = Column(Integer)
    dispossessed: int = Column(Integer)
    duel_lost: int = Column(Integer)
    duel_won: int = Column(Integer)
    error_lead_to_a_goal: int = Column(Integer)
    error_lead_to_a_shot: int = Column(Integer)
    expected_assists: float = Column(REAL)
    expected_goals: float = Column(REAL)
    fouls: int = Column(Integer)
    goal_assist: int = Column(Integer)
    goals: int = Column(Integer)
    goals_prevented: float = Column(REAL)
    good_high_claim: int = Column(Integer)
    hit_woodwork: int = Column(Integer)
    interception_won: int = Column(Integer)
    key_pass: int = Column(Integer)
    last_man_tackle: int = Column(Integer)
    minutes_played: int = Column(Integer)
    on_target_scoring_attempt: int = Column(Integer)
    outfielder_block: int = Column(Integer)
    own_goals: int = Column(Integer)
    penalty_conceded: int = Column(Integer)
    penalty_miss: int = Column(Integer)
    penalty_save: int = Column(Integer)
    penalty_shootout_goal: int = Column(Integer)
    penalty_shootout_miss: int = Column(Integer)
    penalty_shootout_save: int = Column(Integer)
    penalty_won: int = Column(Integer)
    possession_lost_ctrl: int = Column(Integer)
    punches: int = Column(Integer)
    rating: float = Column(REAL)
    rating_versions_alternative: float = Column(REAL)
    rating_versions_original: float = Column(REAL)
    saved_shots_from_inside_the_box: int = Column(Integer)
    saves: int = Column(Integer)
    shot_off_target: int = Column(Integer)
    total_clearance: int = Column(Integer)
    total_contest: int = Column(Integer)
    total_cross: int = Column(Integer)
    total_keeper_sweeper: int = Column(Integer)
    total_long_balls: int = Column(Integer)
    total_offside: int = Column(Integer)
    total_pass: int = Column(Integer)
    total_tackle: int = Column(Integer)
    touches: int = Column(Integer)
    was_fouled: int = Column(Integer)
    won_contest: int = Column(Integer)
